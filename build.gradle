plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    id 'org.unbroken-dome.test-sets' version '1.5.2'

    // flyway plugin for database migrations
    id "org.flywaydb.flyway" version "5.0.7"

    id "au.com.dius.pact" version "3.6.4"
}

// Define the main class for the application
mainClassName = 'org.thenakliman.chupe.App'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

testSets {
    contractTest
}

dependencies {
    compileOnly('org.projectlombok:lombok:1.18.2')

    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'
    compile 'org.springframework.boot:spring-boot-starter-web:2.0.1.RELEASE'
    compile 'org.flywaydb:flyway-core:5.0.7'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:2.0.1.RELEASE'
    compile 'org.postgresql:postgresql:42.2.2'
    compile 'javax.xml.bind:jaxb-api:2.3.0'
    compile 'org.springframework.security:spring-security-web:5.0.5.RELEASE'
    compile 'org.springframework.security:spring-security-core:5.0.5.RELEASE'
    compile 'org.springframework.security:spring-security-config:5.0.5.RELEASE'
    compile 'org.springframework.security:spring-security-test:5.0.5.RELEASE'
    compile 'io.jsonwebtoken:jjwt:0.9.0'
    compile 'com.github.jmnarloch:modelmapper-spring-boot-starter:1.1.0'
    compile 'org.modelmapper:modelmapper:2.0.0'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.1.RELEASE'
    testCompile 'org.mockito:mockito-core:2.18.0'
    testCompile 'com.h2database:h2:1.4.199'
    contractTestCompile 'au.com.dius:pact-jvm-provider-spring_2.12:3.6.4'
    contractTestCompile 'au.com.dius:pact-jvm-provider-junit_2.12:3.6.4'
    contractTestCompile 'au.com.dius:pact-jvm-consumer-junit_2.12:3.6.4'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

task pmd(type: Pmd) {
    description 'Identifying potential problems mainly dead code, duplicated code, cyclomatic complexity and overcomplicated expressions'
    group 'verification'
    ruleSetFiles = files("$project.rootDir/config/rules-pmd.xml")
    source = fileTree('src/main/java')
    include '**/*.java'
    exclude '**/App.java'
}

checkstyle {

    project.ext.checkstyleVersion = '8.9'
    project.ext.sevntuChecksVersion = '1.29.0'

    maxWarnings = 0
    maxErrors = 0
    dependencies {
        checkstyle "com.puppycrawl.tools:checkstyle:${checkstyleVersion}"
        checkstyle "com.github.sevntu-checkstyle:sevntu-checks:${sevntuChecksVersion}"
    }

}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

contractTest {
    systemProperty "pact.verifier.publishResults", System.getProperty("pact.verifier.publishResults")
    systemProperty "pact.provider.version", "${getGitHash()}"
}